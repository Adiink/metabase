name: E2E Tests (Cypress Split with Custom Setup)

on:
  push:
    branches:
      - "master"
      - "release-**"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: e2e-tests-split
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        containers: [0, 1, 2, 4, 5, 6, 7, 8, 9]

    services:
      metabase:
        image: metabase/metabase:latest
        ports:
          - 4000:3000
        options: >-
          --health-cmd="curl --fail http://localhost:3000/api/health || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20

    steps:
      # 1. Checkout code
      - name: Check out code
        uses: actions/checkout@v4

      # 2. Prepare environment
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend

      - name: Wait for Metabase service
        run: |
          echo "Waiting for Metabase to be healthy..."
          sleep 15

      # 3. Custom setup for Docker containers
      - name: Prepare Docker containers
        uses: ./.github/actions/e2e-prepare-containers
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          maildev: true
          openldap: ${{ matrix.containers == 0 }}
          postgres: ${{ matrix.containers != 2 }}
          mysql: ${{ matrix.containers != 3 }}
          mongo: ${{ matrix.containers == 3 }}
          webhook: true

      # 4. Prepare Cypress environment
      - name: Prepare Cypress environment
        id: cypress-prep
        uses: ./.github/actions/prepare-cypress

      # 5. Run Cypress tests with `cypress-split`
      - name: Run split Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: yarn dev
          config-file: e2e/support/cypress.config.js
        env:
          SPLIT: ${{ strategy.job-total }} # Total parallel jobs
          SPLIT_INDEX: ${{ matrix.containers }} # Index of this job
          CYPRESS_CI: true
          MB_EDITION: "oss"
          DISPLAY: ""
          QA_DB_ENABLED: true
          CYPRESS_ALL_FEATURES_TOKEN: ${{ secrets.ENTERPRISE_TOKEN }}
          CYPRESS_NO_FEATURES_TOKEN: ${{ secrets.E2E_STARTER_TOKEN }}
          CYPRESS_PULL_REQUEST_ID: ${{ github.event.pull_request.number || '' }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title || github.event.head_commit.message || github.event.head.sha }}
          MB_SNOWPLOW_AVAILABLE: true
          MB_SNOWPLOW_URL: "http://localhost:9090"

      # 6. Upload test results
      - name: Upload Test Results
        uses: ./.github/actions/upload-test-results
        if: always()
        with:
          input-path: ./target/junit
          output-name: cypress-split-${{ matrix.containers }}
          bucket: ${{ vars.AWS_S3_TEST_RESULTS_BUCKET }}
          aws-access-key-id: ${{ secrets.AWS_TEST_RESULTS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_TEST_RESULTS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          trunk-api-token: ${{ secrets.TRUNK_API_TOKEN }}

      # 7. Upload Cypress artifacts
      - name: Upload Cypress Artifacts (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-split-artifacts-${{ matrix.containers }}
          path: |
            ./cypress
            ./logs/test.log
          if-no-files-found: ignore
