/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MetabaseApi);
  }
}(this, function(expect, MetabaseApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MetabaseApi.ApiDatabaseApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiDatabaseApi', function() {
    describe('apiDatabaseGet', function() {
      it('should call apiDatabaseGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseGet
        //instance.apiDatabaseGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdAutocompleteSuggestionsGet', function() {
      it('should call apiDatabaseIdAutocompleteSuggestionsGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdAutocompleteSuggestionsGet
        //instance.apiDatabaseIdAutocompleteSuggestionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdCardAutocompleteSuggestionsGet', function() {
      it('should call apiDatabaseIdCardAutocompleteSuggestionsGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdCardAutocompleteSuggestionsGet
        //instance.apiDatabaseIdCardAutocompleteSuggestionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdDelete', function() {
      it('should call apiDatabaseIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdDelete
        //instance.apiDatabaseIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdDiscardValuesPost', function() {
      it('should call apiDatabaseIdDiscardValuesPost successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdDiscardValuesPost
        //instance.apiDatabaseIdDiscardValuesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdDismissSpinnerPost', function() {
      it('should call apiDatabaseIdDismissSpinnerPost successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdDismissSpinnerPost
        //instance.apiDatabaseIdDismissSpinnerPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdFieldsGet', function() {
      it('should call apiDatabaseIdFieldsGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdFieldsGet
        //instance.apiDatabaseIdFieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdGet', function() {
      it('should call apiDatabaseIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdGet
        //instance.apiDatabaseIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdIdfieldsGet', function() {
      it('should call apiDatabaseIdIdfieldsGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdIdfieldsGet
        //instance.apiDatabaseIdIdfieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdMetadataGet', function() {
      it('should call apiDatabaseIdMetadataGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdMetadataGet
        //instance.apiDatabaseIdMetadataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdPut', function() {
      it('should call apiDatabaseIdPut successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdPut
        //instance.apiDatabaseIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdRescanValuesPost', function() {
      it('should call apiDatabaseIdRescanValuesPost successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdRescanValuesPost
        //instance.apiDatabaseIdRescanValuesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdSchemaGet', function() {
      it('should call apiDatabaseIdSchemaGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdSchemaGet
        //instance.apiDatabaseIdSchemaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdSchemaSchemaGet', function() {
      it('should call apiDatabaseIdSchemaSchemaGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdSchemaSchemaGet
        //instance.apiDatabaseIdSchemaSchemaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdSchemasGet', function() {
      it('should call apiDatabaseIdSchemasGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdSchemasGet
        //instance.apiDatabaseIdSchemasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdSyncSchemaPost', function() {
      it('should call apiDatabaseIdSyncSchemaPost successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdSyncSchemaPost
        //instance.apiDatabaseIdSyncSchemaPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdSyncableSchemasGet', function() {
      it('should call apiDatabaseIdSyncableSchemasGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdSyncableSchemasGet
        //instance.apiDatabaseIdSyncableSchemasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseIdUsageInfoGet', function() {
      it('should call apiDatabaseIdUsageInfoGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseIdUsageInfoGet
        //instance.apiDatabaseIdUsageInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabasePost', function() {
      it('should call apiDatabasePost successfully', function(done) {
        //uncomment below and update the code to test apiDatabasePost
        //instance.apiDatabasePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseSampleDatabasePost', function() {
      it('should call apiDatabaseSampleDatabasePost successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseSampleDatabasePost
        //instance.apiDatabaseSampleDatabasePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseValidatePost', function() {
      it('should call apiDatabaseValidatePost successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseValidatePost
        //instance.apiDatabaseValidatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseVirtualDbDatasetsGet', function() {
      it('should call apiDatabaseVirtualDbDatasetsGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseVirtualDbDatasetsGet
        //instance.apiDatabaseVirtualDbDatasetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseVirtualDbDatasetsSchemaGet', function() {
      it('should call apiDatabaseVirtualDbDatasetsSchemaGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseVirtualDbDatasetsSchemaGet
        //instance.apiDatabaseVirtualDbDatasetsSchemaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseVirtualDbMetadataGet', function() {
      it('should call apiDatabaseVirtualDbMetadataGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseVirtualDbMetadataGet
        //instance.apiDatabaseVirtualDbMetadataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseVirtualDbSchemaSchemaGet', function() {
      it('should call apiDatabaseVirtualDbSchemaSchemaGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseVirtualDbSchemaSchemaGet
        //instance.apiDatabaseVirtualDbSchemaSchemaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDatabaseVirtualDbSchemasGet', function() {
      it('should call apiDatabaseVirtualDbSchemasGet successfully', function(done) {
        //uncomment below and update the code to test apiDatabaseVirtualDbSchemasGet
        //instance.apiDatabaseVirtualDbSchemasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
