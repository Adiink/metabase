/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MetabaseApi);
  }
}(this, function(expect, MetabaseApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MetabaseApi.ApiCollectionApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCollectionApi', function() {
    describe('apiCollectionGet', function() {
      it('should call apiCollectionGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionGet
        //instance.apiCollectionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionGraphGet', function() {
      it('should call apiCollectionGraphGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionGraphGet
        //instance.apiCollectionGraphGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionGraphPut', function() {
      it('should call apiCollectionGraphPut successfully', function(done) {
        //uncomment below and update the code to test apiCollectionGraphPut
        //instance.apiCollectionGraphPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionIdDashboardQuestionCandidatesGet', function() {
      it('should call apiCollectionIdDashboardQuestionCandidatesGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionIdDashboardQuestionCandidatesGet
        //instance.apiCollectionIdDashboardQuestionCandidatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionIdGet', function() {
      it('should call apiCollectionIdGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionIdGet
        //instance.apiCollectionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionIdItemsGet', function() {
      it('should call apiCollectionIdItemsGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionIdItemsGet
        //instance.apiCollectionIdItemsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionIdMoveDashboardQuestionCandidatesPost', function() {
      it('should call apiCollectionIdMoveDashboardQuestionCandidatesPost successfully', function(done) {
        //uncomment below and update the code to test apiCollectionIdMoveDashboardQuestionCandidatesPost
        //instance.apiCollectionIdMoveDashboardQuestionCandidatesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionIdPut', function() {
      it('should call apiCollectionIdPut successfully', function(done) {
        //uncomment below and update the code to test apiCollectionIdPut
        //instance.apiCollectionIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionPost', function() {
      it('should call apiCollectionPost successfully', function(done) {
        //uncomment below and update the code to test apiCollectionPost
        //instance.apiCollectionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionRootDashboardQuestionCandidatesGet', function() {
      it('should call apiCollectionRootDashboardQuestionCandidatesGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionRootDashboardQuestionCandidatesGet
        //instance.apiCollectionRootDashboardQuestionCandidatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionRootGet', function() {
      it('should call apiCollectionRootGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionRootGet
        //instance.apiCollectionRootGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionRootItemsGet', function() {
      it('should call apiCollectionRootItemsGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionRootItemsGet
        //instance.apiCollectionRootItemsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionRootMoveDashboardQuestionCandidatesPost', function() {
      it('should call apiCollectionRootMoveDashboardQuestionCandidatesPost successfully', function(done) {
        //uncomment below and update the code to test apiCollectionRootMoveDashboardQuestionCandidatesPost
        //instance.apiCollectionRootMoveDashboardQuestionCandidatesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionTrashGet', function() {
      it('should call apiCollectionTrashGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionTrashGet
        //instance.apiCollectionTrashGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiCollectionTreeGet', function() {
      it('should call apiCollectionTreeGet successfully', function(done) {
        //uncomment below and update the code to test apiCollectionTreeGet
        //instance.apiCollectionTreeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
