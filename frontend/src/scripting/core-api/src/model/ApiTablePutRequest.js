/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiTablePutRequest model module.
 * @module model/ApiTablePutRequest
 * @version v1.53.2-SNAPSHOT
 */
class ApiTablePutRequest {
    /**
     * Constructs a new <code>ApiTablePutRequest</code>.
     * @alias module:model/ApiTablePutRequest
     * @param ids {Array.<Number>} 
     */
    constructor(ids) { 
        
        ApiTablePutRequest.initialize(this, ids);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ids) { 
        obj['ids'] = ids;
    }

    /**
     * Constructs a <code>ApiTablePutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiTablePutRequest} obj Optional instance to populate.
     * @return {module:model/ApiTablePutRequest} The populated <code>ApiTablePutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiTablePutRequest();

            if (data.hasOwnProperty('caveats')) {
                obj['caveats'] = ApiClient.convertToType(data['caveats'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('entity_type')) {
                obj['entity_type'] = ApiClient.convertToType(data['entity_type'], Object);
            }
            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['Number']);
            }
            if (data.hasOwnProperty('points_of_interest')) {
                obj['points_of_interest'] = ApiClient.convertToType(data['points_of_interest'], 'String');
            }
            if (data.hasOwnProperty('show_in_getting_started')) {
                obj['show_in_getting_started'] = ApiClient.convertToType(data['show_in_getting_started'], 'Boolean');
            }
            if (data.hasOwnProperty('visibility_type')) {
                obj['visibility_type'] = ApiClient.convertToType(data['visibility_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiTablePutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiTablePutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiTablePutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['caveats'] && !(typeof data['caveats'] === 'string' || data['caveats'] instanceof String)) {
            throw new Error("Expected the field `caveats` to be a primitive type in the JSON string but got " + data['caveats']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ids'])) {
            throw new Error("Expected the field `ids` to be an array in the JSON data but got " + data['ids']);
        }
        // ensure the json data is a string
        if (data['points_of_interest'] && !(typeof data['points_of_interest'] === 'string' || data['points_of_interest'] instanceof String)) {
            throw new Error("Expected the field `points_of_interest` to be a primitive type in the JSON string but got " + data['points_of_interest']);
        }
        // ensure the json data is a string
        if (data['visibility_type'] && !(typeof data['visibility_type'] === 'string' || data['visibility_type'] instanceof String)) {
            throw new Error("Expected the field `visibility_type` to be a primitive type in the JSON string but got " + data['visibility_type']);
        }

        return true;
    }


}

ApiTablePutRequest.RequiredProperties = ["ids"];

/**
 * @member {String} caveats
 */
ApiTablePutRequest.prototype['caveats'] = undefined;

/**
 * @member {String} description
 */
ApiTablePutRequest.prototype['description'] = undefined;

/**
 * @member {String} display_name
 */
ApiTablePutRequest.prototype['display_name'] = undefined;

/**
 * @member {Object} entity_type
 */
ApiTablePutRequest.prototype['entity_type'] = undefined;

/**
 * @member {Array.<Number>} ids
 */
ApiTablePutRequest.prototype['ids'] = undefined;

/**
 * @member {String} points_of_interest
 */
ApiTablePutRequest.prototype['points_of_interest'] = undefined;

/**
 * @member {Boolean} show_in_getting_started
 */
ApiTablePutRequest.prototype['show_in_getting_started'] = undefined;

/**
 * @member {module:model/ApiTablePutRequest.VisibilityTypeEnum} visibility_type
 */
ApiTablePutRequest.prototype['visibility_type'] = undefined;





/**
 * Allowed values for the <code>visibility_type</code> property.
 * @enum {String}
 * @readonly
 */
ApiTablePutRequest['VisibilityTypeEnum'] = {

    /**
     * value: "technical"
     * @const
     */
    "technical": "technical",

    /**
     * value: "hidden"
     * @const
     */
    "hidden": "hidden",

    /**
     * value: "cruft"
     * @const
     */
    "cruft": "cruft"
};



export default ApiTablePutRequest;

