/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiCardPostRequestParameterMappingsInner from './ApiCardPostRequestParameterMappingsInner';
import ApiCardPostRequestParametersInner from './ApiCardPostRequestParametersInner';
import MetabaseAnalyzeQueryResultsResultColumnMetadata from './MetabaseAnalyzeQueryResultsResultColumnMetadata';

/**
 * The ApiEeAutodescribeCardSummarizePostRequest model module.
 * @module model/ApiEeAutodescribeCardSummarizePostRequest
 * @version v1.53.2-SNAPSHOT
 */
class ApiEeAutodescribeCardSummarizePostRequest {
    /**
     * Constructs a new <code>ApiEeAutodescribeCardSummarizePostRequest</code>.
     * @alias module:model/ApiEeAutodescribeCardSummarizePostRequest
     * @param visualizationSettings {Object} Value must be a map.
     * @param datasetQuery {Object} Value must be a map.
     * @param display {String} 
     */
    constructor(visualizationSettings, datasetQuery, display) { 
        
        ApiEeAutodescribeCardSummarizePostRequest.initialize(this, visualizationSettings, datasetQuery, display);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, visualizationSettings, datasetQuery, display) { 
        obj['visualization_settings'] = visualizationSettings;
        obj['dataset_query'] = datasetQuery;
        obj['display'] = display;
    }

    /**
     * Constructs a <code>ApiEeAutodescribeCardSummarizePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiEeAutodescribeCardSummarizePostRequest} obj Optional instance to populate.
     * @return {module:model/ApiEeAutodescribeCardSummarizePostRequest} The populated <code>ApiEeAutodescribeCardSummarizePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiEeAutodescribeCardSummarizePostRequest();

            if (data.hasOwnProperty('visualization_settings')) {
                obj['visualization_settings'] = ApiClient.convertToType(data['visualization_settings'], Object);
            }
            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'Boolean');
            }
            if (data.hasOwnProperty('dataset_query')) {
                obj['dataset_query'] = ApiClient.convertToType(data['dataset_query'], Object);
            }
            if (data.hasOwnProperty('parameter_mappings')) {
                obj['parameter_mappings'] = ApiClient.convertToType(data['parameter_mappings'], [ApiCardPostRequestParameterMappingsInner]);
            }
            if (data.hasOwnProperty('collection_position')) {
                obj['collection_position'] = ApiClient.convertToType(data['collection_position'], 'Number');
            }
            if (data.hasOwnProperty('result_metadata')) {
                obj['result_metadata'] = ApiClient.convertToType(data['result_metadata'], [MetabaseAnalyzeQueryResultsResultColumnMetadata]);
            }
            if (data.hasOwnProperty('collection_id')) {
                obj['collection_id'] = ApiClient.convertToType(data['collection_id'], 'Number');
            }
            if (data.hasOwnProperty('cache_ttl')) {
                obj['cache_ttl'] = ApiClient.convertToType(data['cache_ttl'], 'Number');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [ApiCardPostRequestParametersInner]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiEeAutodescribeCardSummarizePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiEeAutodescribeCardSummarizePostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiEeAutodescribeCardSummarizePostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['parameter_mappings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameter_mappings'])) {
                throw new Error("Expected the field `parameter_mappings` to be an array in the JSON data but got " + data['parameter_mappings']);
            }
            // validate the optional field `parameter_mappings` (array)
            for (const item of data['parameter_mappings']) {
                ApiCardPostRequestParameterMappingsInner.validateJSON(item);
            };
        }
        if (data['result_metadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['result_metadata'])) {
                throw new Error("Expected the field `result_metadata` to be an array in the JSON data but got " + data['result_metadata']);
            }
            // validate the optional field `result_metadata` (array)
            for (const item of data['result_metadata']) {
                MetabaseAnalyzeQueryResultsResultColumnMetadata.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                ApiCardPostRequestParametersInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}

ApiEeAutodescribeCardSummarizePostRequest.RequiredProperties = ["visualization_settings", "dataset_query", "display"];

/**
 * Value must be a map.
 * @member {Object} visualization_settings
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['visualization_settings'] = undefined;

/**
 * @member {Boolean} dataset
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['dataset'] = undefined;

/**
 * Value must be a map.
 * @member {Object} dataset_query
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['dataset_query'] = undefined;

/**
 * @member {Array.<module:model/ApiCardPostRequestParameterMappingsInner>} parameter_mappings
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['parameter_mappings'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} collection_position
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['collection_position'] = undefined;

/**
 * value must be an array of valid results column metadata maps.
 * @member {Array.<module:model/MetabaseAnalyzeQueryResultsResultColumnMetadata>} result_metadata
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['result_metadata'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} collection_id
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['collection_id'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} cache_ttl
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['cache_ttl'] = undefined;

/**
 * @member {String} display
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['display'] = undefined;

/**
 * @member {Array.<module:model/ApiCardPostRequestParametersInner>} parameters
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['parameters'] = undefined;

/**
 * @member {String} description
 */
ApiEeAutodescribeCardSummarizePostRequest.prototype['description'] = undefined;






export default ApiEeAutodescribeCardSummarizePostRequest;

