/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetabaseApiCacheCacheStrategyEe from './MetabaseApiCacheCacheStrategyEe';
import MetabaseApiCacheCacheStrategyOss from './MetabaseApiCacheCacheStrategyOss';

/**
 * The MetabaseApiCache1cacheStrategy model module.
 * @module model/MetabaseApiCache1cacheStrategy
 * @version v1.53.2-SNAPSHOT
 */
class MetabaseApiCache1cacheStrategy {
    /**
     * Constructs a new <code>MetabaseApiCache1cacheStrategy</code>.
     * @alias module:model/MetabaseApiCache1cacheStrategy
     * @param {(module:model/MetabaseApiCacheCacheStrategyEe|module:model/MetabaseApiCacheCacheStrategyOss)} instance The actual instance to initialize MetabaseApiCache1cacheStrategy.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "MetabaseApiCacheCacheStrategyEe") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MetabaseApiCacheCacheStrategyEe.validateJSON(instance); // throw an exception if no match
                // create MetabaseApiCacheCacheStrategyEe from JS object
                this.actualInstance = MetabaseApiCacheCacheStrategyEe.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MetabaseApiCacheCacheStrategyEe
            errorMessages.push("Failed to construct MetabaseApiCacheCacheStrategyEe: " + err)
        }

        try {
            if (typeof instance === "MetabaseApiCacheCacheStrategyOss") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MetabaseApiCacheCacheStrategyOss.validateJSON(instance); // throw an exception if no match
                // create MetabaseApiCacheCacheStrategyOss from JS object
                this.actualInstance = MetabaseApiCacheCacheStrategyOss.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MetabaseApiCacheCacheStrategyOss
            errorMessages.push("Failed to construct MetabaseApiCacheCacheStrategyOss: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `MetabaseApiCache1cacheStrategy` with oneOf schemas MetabaseApiCacheCacheStrategyEe, MetabaseApiCacheCacheStrategyOss. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `MetabaseApiCache1cacheStrategy` with oneOf schemas MetabaseApiCacheCacheStrategyEe, MetabaseApiCacheCacheStrategyOss. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>MetabaseApiCache1cacheStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetabaseApiCache1cacheStrategy} obj Optional instance to populate.
     * @return {module:model/MetabaseApiCache1cacheStrategy} The populated <code>MetabaseApiCache1cacheStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        return new MetabaseApiCache1cacheStrategy(data);
    }

    /**
     * Gets the actual instance, which can be <code>MetabaseApiCacheCacheStrategyEe</code>, <code>MetabaseApiCacheCacheStrategyOss</code>.
     * @return {(module:model/MetabaseApiCacheCacheStrategyEe|module:model/MetabaseApiCacheCacheStrategyOss)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>MetabaseApiCacheCacheStrategyEe</code>, <code>MetabaseApiCacheCacheStrategyOss</code>.
     * @param {(module:model/MetabaseApiCacheCacheStrategyEe|module:model/MetabaseApiCacheCacheStrategyOss)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = MetabaseApiCache1cacheStrategy.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of MetabaseApiCache1cacheStrategy from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/MetabaseApiCache1cacheStrategy} An instance of MetabaseApiCache1cacheStrategy.
     */
    static fromJSON = function(json_string){
        return MetabaseApiCache1cacheStrategy.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {Object} type
 */
MetabaseApiCache1cacheStrategy.prototype['type'] = undefined;

/**
 * value must be an integer greater or equal to than zero.
 * @member {Number} min_duration_ms
 */
MetabaseApiCache1cacheStrategy.prototype['min_duration_ms'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} multiplier
 */
MetabaseApiCache1cacheStrategy.prototype['multiplier'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} duration
 */
MetabaseApiCache1cacheStrategy.prototype['duration'] = undefined;

/**
 * @member {Boolean} refresh_automatically
 */
MetabaseApiCache1cacheStrategy.prototype['refresh_automatically'] = undefined;

/**
 * @member {module:model/MetabaseApiCache1cacheStrategy.UnitEnum} unit
 */
MetabaseApiCache1cacheStrategy.prototype['unit'] = undefined;

/**
 * @member {String} schedule
 */
MetabaseApiCache1cacheStrategy.prototype['schedule'] = undefined;


MetabaseApiCache1cacheStrategy.OneOf = ["MetabaseApiCacheCacheStrategyEe", "MetabaseApiCacheCacheStrategyOss"];

export default MetabaseApiCache1cacheStrategy;

