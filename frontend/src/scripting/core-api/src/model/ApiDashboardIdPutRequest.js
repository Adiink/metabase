/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiCardPostRequestParametersInner from './ApiCardPostRequestParametersInner';
import ApiDashboardIdPutRequestDashcardsInner from './ApiDashboardIdPutRequestDashcardsInner';
import ApiDashboardIdPutRequestTabsInner from './ApiDashboardIdPutRequestTabsInner';

/**
 * The ApiDashboardIdPutRequest model module.
 * @module model/ApiDashboardIdPutRequest
 * @version v1.53.2-SNAPSHOT
 */
class ApiDashboardIdPutRequest {
    /**
     * Constructs a new <code>ApiDashboardIdPutRequest</code>.
     * @alias module:model/ApiDashboardIdPutRequest
     */
    constructor() { 
        
        ApiDashboardIdPutRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiDashboardIdPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiDashboardIdPutRequest} obj Optional instance to populate.
     * @return {module:model/ApiDashboardIdPutRequest} The populated <code>ApiDashboardIdPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiDashboardIdPutRequest();

            if (data.hasOwnProperty('points_of_interest')) {
                obj['points_of_interest'] = ApiClient.convertToType(data['points_of_interest'], 'String');
            }
            if (data.hasOwnProperty('enable_embedding')) {
                obj['enable_embedding'] = ApiClient.convertToType(data['enable_embedding'], 'Boolean');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'String');
            }
            if (data.hasOwnProperty('show_in_getting_started')) {
                obj['show_in_getting_started'] = ApiClient.convertToType(data['show_in_getting_started'], 'Boolean');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('collection_position')) {
                obj['collection_position'] = ApiClient.convertToType(data['collection_position'], 'Number');
            }
            if (data.hasOwnProperty('embedding_params')) {
                obj['embedding_params'] = ApiClient.convertToType(data['embedding_params'], {'String': 'String'});
            }
            if (data.hasOwnProperty('tabs')) {
                obj['tabs'] = ApiClient.convertToType(data['tabs'], [ApiDashboardIdPutRequestTabsInner]);
            }
            if (data.hasOwnProperty('collection_id')) {
                obj['collection_id'] = ApiClient.convertToType(data['collection_id'], 'Number');
            }
            if (data.hasOwnProperty('cache_ttl')) {
                obj['cache_ttl'] = ApiClient.convertToType(data['cache_ttl'], 'Number');
            }
            if (data.hasOwnProperty('caveats')) {
                obj['caveats'] = ApiClient.convertToType(data['caveats'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [ApiCardPostRequestParametersInner]);
            }
            if (data.hasOwnProperty('dashcards')) {
                obj['dashcards'] = ApiClient.convertToType(data['dashcards'], [ApiDashboardIdPutRequestDashcardsInner]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiDashboardIdPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiDashboardIdPutRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['points_of_interest'] && !(typeof data['points_of_interest'] === 'string' || data['points_of_interest'] instanceof String)) {
            throw new Error("Expected the field `points_of_interest` to be a primitive type in the JSON string but got " + data['points_of_interest']);
        }
        // ensure the json data is a string
        if (data['width'] && !(typeof data['width'] === 'string' || data['width'] instanceof String)) {
            throw new Error("Expected the field `width` to be a primitive type in the JSON string but got " + data['width']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['tabs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tabs'])) {
                throw new Error("Expected the field `tabs` to be an array in the JSON data but got " + data['tabs']);
            }
            // validate the optional field `tabs` (array)
            for (const item of data['tabs']) {
                ApiDashboardIdPutRequestTabsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['caveats'] && !(typeof data['caveats'] === 'string' || data['caveats'] instanceof String)) {
            throw new Error("Expected the field `caveats` to be a primitive type in the JSON string but got " + data['caveats']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                ApiCardPostRequestParametersInner.validateJSON(item);
            };
        }
        if (data['dashcards']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dashcards'])) {
                throw new Error("Expected the field `dashcards` to be an array in the JSON data but got " + data['dashcards']);
            }
            // validate the optional field `dashcards` (array)
            for (const item of data['dashcards']) {
                ApiDashboardIdPutRequestDashcardsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}



/**
 * @member {String} points_of_interest
 */
ApiDashboardIdPutRequest.prototype['points_of_interest'] = undefined;

/**
 * @member {Boolean} enable_embedding
 */
ApiDashboardIdPutRequest.prototype['enable_embedding'] = undefined;

/**
 * @member {module:model/ApiDashboardIdPutRequest.WidthEnum} width
 */
ApiDashboardIdPutRequest.prototype['width'] = undefined;

/**
 * @member {Boolean} show_in_getting_started
 */
ApiDashboardIdPutRequest.prototype['show_in_getting_started'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} position
 */
ApiDashboardIdPutRequest.prototype['position'] = undefined;

/**
 * @member {String} name
 */
ApiDashboardIdPutRequest.prototype['name'] = undefined;

/**
 * @member {Boolean} archived
 */
ApiDashboardIdPutRequest.prototype['archived'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} collection_position
 */
ApiDashboardIdPutRequest.prototype['collection_position'] = undefined;

/**
 * value must be a valid embedding params map.
 * @member {Object.<String, module:model/ApiDashboardIdPutRequest.InnerEnum>} embedding_params
 */
ApiDashboardIdPutRequest.prototype['embedding_params'] = undefined;

/**
 * value must be seq of maps in which ids are unique
 * @member {Array.<module:model/ApiDashboardIdPutRequestTabsInner>} tabs
 */
ApiDashboardIdPutRequest.prototype['tabs'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} collection_id
 */
ApiDashboardIdPutRequest.prototype['collection_id'] = undefined;

/**
 * value must be an integer greater than zero.
 * @member {Number} cache_ttl
 */
ApiDashboardIdPutRequest.prototype['cache_ttl'] = undefined;

/**
 * @member {String} caveats
 */
ApiDashboardIdPutRequest.prototype['caveats'] = undefined;

/**
 * @member {Array.<module:model/ApiCardPostRequestParametersInner>} parameters
 */
ApiDashboardIdPutRequest.prototype['parameters'] = undefined;

/**
 * value must be seq of maps in which ids are unique
 * @member {Array.<module:model/ApiDashboardIdPutRequestDashcardsInner>} dashcards
 */
ApiDashboardIdPutRequest.prototype['dashcards'] = undefined;

/**
 * @member {String} description
 */
ApiDashboardIdPutRequest.prototype['description'] = undefined;





/**
 * Allowed values for the <code>width</code> property.
 * @enum {String}
 * @readonly
 */
ApiDashboardIdPutRequest['WidthEnum'] = {

    /**
     * value: "fixed"
     * @const
     */
    "fixed": "fixed",

    /**
     * value: "full"
     * @const
     */
    "full": "full"
};


/**
 * Allowed values for the <code>inner</code> property.
 * @enum {String}
 * @readonly
 */
ApiDashboardIdPutRequest['InnerEnum'] = {

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled",

    /**
     * value: "locked"
     * @const
     */
    "locked": "locked"
};



export default ApiDashboardIdPutRequest;

