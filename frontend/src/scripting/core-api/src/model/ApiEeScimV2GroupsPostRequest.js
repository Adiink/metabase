/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiEeScimV2GroupsPostRequestMembersInner from './ApiEeScimV2GroupsPostRequestMembersInner';

/**
 * The ApiEeScimV2GroupsPostRequest model module.
 * @module model/ApiEeScimV2GroupsPostRequest
 * @version v1.53.2-SNAPSHOT
 */
class ApiEeScimV2GroupsPostRequest {
    /**
     * Constructs a new <code>ApiEeScimV2GroupsPostRequest</code>.
     * @alias module:model/ApiEeScimV2GroupsPostRequest
     * @param displayName {String} 
     * @param schemas {Array.<String>} 
     */
    constructor(displayName, schemas) { 
        
        ApiEeScimV2GroupsPostRequest.initialize(this, displayName, schemas);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName, schemas) { 
        obj['displayName'] = displayName;
        obj['schemas'] = schemas;
    }

    /**
     * Constructs a <code>ApiEeScimV2GroupsPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiEeScimV2GroupsPostRequest} obj Optional instance to populate.
     * @return {module:model/ApiEeScimV2GroupsPostRequest} The populated <code>ApiEeScimV2GroupsPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiEeScimV2GroupsPostRequest();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [ApiEeScimV2GroupsPostRequestMembersInner]);
            }
            if (data.hasOwnProperty('schemas')) {
                obj['schemas'] = ApiClient.convertToType(data['schemas'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiEeScimV2GroupsPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiEeScimV2GroupsPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiEeScimV2GroupsPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                ApiEeScimV2GroupsPostRequestMembersInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['schemas'])) {
            throw new Error("Expected the field `schemas` to be an array in the JSON data but got " + data['schemas']);
        }

        return true;
    }


}

ApiEeScimV2GroupsPostRequest.RequiredProperties = ["displayName", "schemas"];

/**
 * @member {String} displayName
 */
ApiEeScimV2GroupsPostRequest.prototype['displayName'] = undefined;

/**
 * @member {String} id
 */
ApiEeScimV2GroupsPostRequest.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/ApiEeScimV2GroupsPostRequestMembersInner>} members
 */
ApiEeScimV2GroupsPostRequest.prototype['members'] = undefined;

/**
 * @member {Array.<String>} schemas
 */
ApiEeScimV2GroupsPostRequest.prototype['schemas'] = undefined;






export default ApiEeScimV2GroupsPostRequest;

