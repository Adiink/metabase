/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiEeScimV2UsersPostRequestName model module.
 * @module model/ApiEeScimV2UsersPostRequestName
 * @version v1.53.2-SNAPSHOT
 */
class ApiEeScimV2UsersPostRequestName {
    /**
     * Constructs a new <code>ApiEeScimV2UsersPostRequestName</code>.
     * @alias module:model/ApiEeScimV2UsersPostRequestName
     * @param familyName {String} 
     * @param givenName {String} 
     */
    constructor(familyName, givenName) { 
        
        ApiEeScimV2UsersPostRequestName.initialize(this, familyName, givenName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, familyName, givenName) { 
        obj['familyName'] = familyName;
        obj['givenName'] = givenName;
    }

    /**
     * Constructs a <code>ApiEeScimV2UsersPostRequestName</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiEeScimV2UsersPostRequestName} obj Optional instance to populate.
     * @return {module:model/ApiEeScimV2UsersPostRequestName} The populated <code>ApiEeScimV2UsersPostRequestName</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiEeScimV2UsersPostRequestName();

            if (data.hasOwnProperty('familyName')) {
                obj['familyName'] = ApiClient.convertToType(data['familyName'], 'String');
            }
            if (data.hasOwnProperty('givenName')) {
                obj['givenName'] = ApiClient.convertToType(data['givenName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiEeScimV2UsersPostRequestName</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiEeScimV2UsersPostRequestName</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiEeScimV2UsersPostRequestName.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['familyName'] && !(typeof data['familyName'] === 'string' || data['familyName'] instanceof String)) {
            throw new Error("Expected the field `familyName` to be a primitive type in the JSON string but got " + data['familyName']);
        }
        // ensure the json data is a string
        if (data['givenName'] && !(typeof data['givenName'] === 'string' || data['givenName'] instanceof String)) {
            throw new Error("Expected the field `givenName` to be a primitive type in the JSON string but got " + data['givenName']);
        }

        return true;
    }


}

ApiEeScimV2UsersPostRequestName.RequiredProperties = ["familyName", "givenName"];

/**
 * @member {String} familyName
 */
ApiEeScimV2UsersPostRequestName.prototype['familyName'] = undefined;

/**
 * @member {String} givenName
 */
ApiEeScimV2UsersPostRequestName.prototype['givenName'] = undefined;






export default ApiEeScimV2UsersPostRequestName;

