/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetabaseAnalyzeFingerprintSchemaNumberFingerprint from './MetabaseAnalyzeFingerprintSchemaNumberFingerprint';
import MetabaseAnalyzeFingerprintSchemaTemporalFingerprint from './MetabaseAnalyzeFingerprintSchemaTemporalFingerprint';
import MetabaseAnalyzeFingerprintSchemaTextFingerprint from './MetabaseAnalyzeFingerprintSchemaTextFingerprint';

/**
 * The MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint model module.
 * @module model/MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint
 * @version v1.53.2-SNAPSHOT
 */
class MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint {
    /**
     * Constructs a new <code>MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint</code>.
     * @alias module:model/MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint
     */
    constructor() { 
        
        MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint} obj Optional instance to populate.
     * @return {module:model/MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint} The populated <code>MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint();

            if (data.hasOwnProperty('type/DateTime')) {
                obj['type/DateTime'] = MetabaseAnalyzeFingerprintSchemaTemporalFingerprint.constructFromObject(data['type/DateTime']);
            }
            if (data.hasOwnProperty('type/Number')) {
                obj['type/Number'] = MetabaseAnalyzeFingerprintSchemaNumberFingerprint.constructFromObject(data['type/Number']);
            }
            if (data.hasOwnProperty('type/Text')) {
                obj['type/Text'] = MetabaseAnalyzeFingerprintSchemaTextFingerprint.constructFromObject(data['type/Text']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `type/DateTime`
        if (data['type/DateTime']) { // data not null
          MetabaseAnalyzeFingerprintSchemaTemporalFingerprint.validateJSON(data['type/DateTime']);
        }
        // validate the optional field `type/Number`
        if (data['type/Number']) { // data not null
          MetabaseAnalyzeFingerprintSchemaNumberFingerprint.validateJSON(data['type/Number']);
        }
        // validate the optional field `type/Text`
        if (data['type/Text']) { // data not null
          MetabaseAnalyzeFingerprintSchemaTextFingerprint.validateJSON(data['type/Text']);
        }

        return true;
    }


}



/**
 * @member {module:model/MetabaseAnalyzeFingerprintSchemaTemporalFingerprint} type/DateTime
 */
MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint.prototype['type/DateTime'] = undefined;

/**
 * @member {module:model/MetabaseAnalyzeFingerprintSchemaNumberFingerprint} type/Number
 */
MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint.prototype['type/Number'] = undefined;

/**
 * @member {module:model/MetabaseAnalyzeFingerprintSchemaTextFingerprint} type/Text
 */
MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint.prototype['type/Text'] = undefined;






export default MetabaseAnalyzeFingerprintSchemaTypeSpecificFingerprint;

