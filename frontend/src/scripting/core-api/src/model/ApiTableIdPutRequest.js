/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiTableIdPutRequest model module.
 * @module model/ApiTableIdPutRequest
 * @version v1.53.2-SNAPSHOT
 */
class ApiTableIdPutRequest {
    /**
     * Constructs a new <code>ApiTableIdPutRequest</code>.
     * @alias module:model/ApiTableIdPutRequest
     */
    constructor() { 
        
        ApiTableIdPutRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiTableIdPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiTableIdPutRequest} obj Optional instance to populate.
     * @return {module:model/ApiTableIdPutRequest} The populated <code>ApiTableIdPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiTableIdPutRequest();

            if (data.hasOwnProperty('caveats')) {
                obj['caveats'] = ApiClient.convertToType(data['caveats'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('entity_type')) {
                obj['entity_type'] = ApiClient.convertToType(data['entity_type'], Object);
            }
            if (data.hasOwnProperty('field_order')) {
                obj['field_order'] = ApiClient.convertToType(data['field_order'], 'String');
            }
            if (data.hasOwnProperty('points_of_interest')) {
                obj['points_of_interest'] = ApiClient.convertToType(data['points_of_interest'], 'String');
            }
            if (data.hasOwnProperty('show_in_getting_started')) {
                obj['show_in_getting_started'] = ApiClient.convertToType(data['show_in_getting_started'], 'Boolean');
            }
            if (data.hasOwnProperty('visibility_type')) {
                obj['visibility_type'] = ApiClient.convertToType(data['visibility_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiTableIdPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiTableIdPutRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caveats'] && !(typeof data['caveats'] === 'string' || data['caveats'] instanceof String)) {
            throw new Error("Expected the field `caveats` to be a primitive type in the JSON string but got " + data['caveats']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['field_order'] && !(typeof data['field_order'] === 'string' || data['field_order'] instanceof String)) {
            throw new Error("Expected the field `field_order` to be a primitive type in the JSON string but got " + data['field_order']);
        }
        // ensure the json data is a string
        if (data['points_of_interest'] && !(typeof data['points_of_interest'] === 'string' || data['points_of_interest'] instanceof String)) {
            throw new Error("Expected the field `points_of_interest` to be a primitive type in the JSON string but got " + data['points_of_interest']);
        }
        // ensure the json data is a string
        if (data['visibility_type'] && !(typeof data['visibility_type'] === 'string' || data['visibility_type'] instanceof String)) {
            throw new Error("Expected the field `visibility_type` to be a primitive type in the JSON string but got " + data['visibility_type']);
        }

        return true;
    }


}



/**
 * @member {String} caveats
 */
ApiTableIdPutRequest.prototype['caveats'] = undefined;

/**
 * @member {String} description
 */
ApiTableIdPutRequest.prototype['description'] = undefined;

/**
 * @member {String} display_name
 */
ApiTableIdPutRequest.prototype['display_name'] = undefined;

/**
 * @member {Object} entity_type
 */
ApiTableIdPutRequest.prototype['entity_type'] = undefined;

/**
 * @member {module:model/ApiTableIdPutRequest.FieldOrderEnum} field_order
 */
ApiTableIdPutRequest.prototype['field_order'] = undefined;

/**
 * @member {String} points_of_interest
 */
ApiTableIdPutRequest.prototype['points_of_interest'] = undefined;

/**
 * @member {Boolean} show_in_getting_started
 */
ApiTableIdPutRequest.prototype['show_in_getting_started'] = undefined;

/**
 * @member {module:model/ApiTableIdPutRequest.VisibilityTypeEnum} visibility_type
 */
ApiTableIdPutRequest.prototype['visibility_type'] = undefined;





/**
 * Allowed values for the <code>field_order</code> property.
 * @enum {String}
 * @readonly
 */
ApiTableIdPutRequest['FieldOrderEnum'] = {

    /**
     * value: "alphabetical"
     * @const
     */
    "alphabetical": "alphabetical",

    /**
     * value: "custom"
     * @const
     */
    "custom": "custom",

    /**
     * value: "database"
     * @const
     */
    "database": "database",

    /**
     * value: "smart"
     * @const
     */
    "smart": "smart"
};


/**
 * Allowed values for the <code>visibility_type</code> property.
 * @enum {String}
 * @readonly
 */
ApiTableIdPutRequest['VisibilityTypeEnum'] = {

    /**
     * value: "technical"
     * @const
     */
    "technical": "technical",

    /**
     * value: "hidden"
     * @const
     */
    "hidden": "hidden",

    /**
     * value: "cruft"
     * @const
     */
    "cruft": "cruft"
};



export default ApiTableIdPutRequest;

