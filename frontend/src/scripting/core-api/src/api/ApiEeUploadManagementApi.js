/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ApiEeUploadManagement service.
* @module api/ApiEeUploadManagementApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiEeUploadManagementApi {

    /**
    * Constructs a new ApiEeUploadManagementApi. 
    * @alias module:api/ApiEeUploadManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiEeUploadManagementTablesGet operation.
     * @callback module:api/ApiEeUploadManagementApi~apiEeUploadManagementTablesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/ee/upload-management/tables
     * Get all `Tables` visible to the current user which were created by uploading a file.
     * @param {module:api/ApiEeUploadManagementApi~apiEeUploadManagementTablesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEeUploadManagementTablesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/ee/upload-management/tables', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiEeUploadManagementTablesIdDelete operation.
     * @callback module:api/ApiEeUploadManagementApi~apiEeUploadManagementTablesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DELETE /api/ee/upload-management/tables/{id}
     * Delete the uploaded table from the database, optionally archiving cards for which it is the primary source.
     * @param {Number} id value must be an integer greater than zero.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [archiveCards = false)] 
     * @param {module:api/ApiEeUploadManagementApi~apiEeUploadManagementTablesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEeUploadManagementTablesIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiEeUploadManagementTablesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'archive-cards': opts['archiveCards']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/ee/upload-management/tables/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
