/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ApiEeAuditAppUser service.
* @module api/ApiEeAuditAppUserApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiEeAuditAppUserApi {

    /**
    * Constructs a new ApiEeAuditAppUserApi. 
    * @alias module:api/ApiEeAuditAppUserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiEeAuditAppUserAuditInfoGet operation.
     * @callback module:api/ApiEeAuditAppUserApi~apiEeAuditAppUserAuditInfoGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/ee/audit-app/user/audit-info
     * Gets audit info for the current user if he has permissions to access the audit collection.   Otherwise return an empty map.
     * @param {module:api/ApiEeAuditAppUserApi~apiEeAuditAppUserAuditInfoGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEeAuditAppUserAuditInfoGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/ee/audit-app/user/audit-info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiEeAuditAppUserIdSubscriptionsDelete operation.
     * @callback module:api/ApiEeAuditAppUserApi~apiEeAuditAppUserIdSubscriptionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DELETE /api/ee/audit-app/user/{id}/subscriptions
     * Delete all Alert and DashboardSubscription subscriptions for a User (i.e., so they will no longer receive them).   Archive all Alerts and DashboardSubscriptions created by the User. Only allowed for admins or for the current user.
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:api/ApiEeAuditAppUserApi~apiEeAuditAppUserIdSubscriptionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEeAuditAppUserIdSubscriptionsDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiEeAuditAppUserIdSubscriptionsDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/ee/audit-app/user/{id}/subscriptions', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
