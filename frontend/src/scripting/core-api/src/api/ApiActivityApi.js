/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiActivityRecentsPostRequest from '../model/ApiActivityRecentsPostRequest';

/**
* ApiActivity service.
* @module api/ApiActivityApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiActivityApi {

    /**
    * Constructs a new ApiActivityApi. 
    * @alias module:api/ApiActivityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiActivityMostRecentlyViewedDashboardGet operation.
     * @callback module:api/ApiActivityApi~apiActivityMostRecentlyViewedDashboardGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/activity/most_recently_viewed_dashboard
     * Get the most recently viewed dashboard for the current user. Returns a 204 if the user has not viewed any dashboards    in the last 24 hours.
     * @param {module:api/ApiActivityApi~apiActivityMostRecentlyViewedDashboardGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiActivityMostRecentlyViewedDashboardGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/activity/most_recently_viewed_dashboard', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiActivityPopularItemsGet operation.
     * @callback module:api/ApiActivityApi~apiActivityPopularItemsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/activity/popular_items
     * Get the list of 5 popular things on the instance. Query takes 8 and limits to 5 so that if it finds anything   archived, deleted, etc it can usually still get 5. 
     * @param {module:api/ApiActivityApi~apiActivityPopularItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiActivityPopularItemsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/activity/popular_items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiActivityRecentViewsGet operation.
     * @callback module:api/ApiActivityApi~apiActivityRecentViewsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/activity/recent_views
     * Get a list of 100 models (cards, models, tables, dashboards, and collections) that the current user has been viewing most   recently. Return a maximum of 20 model of each, if they've looked at at least 20.
     * @param {module:api/ApiActivityApi~apiActivityRecentViewsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiActivityRecentViewsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/activity/recent_views', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiActivityRecentsGet operation.
     * @callback module:api/ApiActivityApi~apiActivityRecentsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/activity/recents
     * Get a list of recent items the current user has been viewing most recently under the `:recents` key.   Allows for filtering by context: views or selections
     * @param {Array.<module:model/String>} context 
     * @param {module:api/ApiActivityApi~apiActivityRecentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiActivityRecentsGet(context, callback) {
      let postBody = null;
      // verify the required parameter 'context' is set
      if (context === undefined || context === null) {
        throw new Error("Missing the required parameter 'context' when calling apiActivityRecentsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'context': this.apiClient.buildCollectionParam(context, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/activity/recents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiActivityRecentsPost operation.
     * @callback module:api/ApiActivityApi~apiActivityRecentsPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/activity/recents
     * Adds a model to the list of recently selected items.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiActivityRecentsPostRequest} [apiActivityRecentsPostRequest] 
     * @param {module:api/ApiActivityApi~apiActivityRecentsPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiActivityRecentsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiActivityRecentsPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/activity/recents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
