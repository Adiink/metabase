/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiModelIndexPostRequest from '../model/ApiModelIndexPostRequest';

/**
* ApiModelIndex service.
* @module api/ApiModelIndexApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiModelIndexApi {

    /**
    * Constructs a new ApiModelIndexApi. 
    * @alias module:api/ApiModelIndexApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiModelIndexGet operation.
     * @callback module:api/ApiModelIndexApi~apiModelIndexGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/model-index/
     * Retrieve list of ModelIndex.
     * @param {Number} modelId value must be an integer greater than zero.
     * @param {module:api/ApiModelIndexApi~apiModelIndexGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiModelIndexGet(modelId, callback) {
      let postBody = null;
      // verify the required parameter 'modelId' is set
      if (modelId === undefined || modelId === null) {
        throw new Error("Missing the required parameter 'modelId' when calling apiModelIndexGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'model_id': modelId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/model-index/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiModelIndexIdDelete operation.
     * @callback module:api/ApiModelIndexApi~apiModelIndexIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DELETE /api/model-index/{id}
     * Delete ModelIndex.
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:api/ApiModelIndexApi~apiModelIndexIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiModelIndexIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiModelIndexIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/model-index/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiModelIndexIdGet operation.
     * @callback module:api/ApiModelIndexApi~apiModelIndexIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/model-index/{id}
     * Retrieve ModelIndex.
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:api/ApiModelIndexApi~apiModelIndexIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiModelIndexIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiModelIndexIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/model-index/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiModelIndexPost operation.
     * @callback module:api/ApiModelIndexApi~apiModelIndexPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/model-index/
     * Create ModelIndex.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiModelIndexPostRequest} [apiModelIndexPostRequest] 
     * @param {module:api/ApiModelIndexApi~apiModelIndexPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiModelIndexPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiModelIndexPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/model-index/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
