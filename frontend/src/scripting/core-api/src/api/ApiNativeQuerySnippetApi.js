/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiNativeQuerySnippetIdPutRequest from '../model/ApiNativeQuerySnippetIdPutRequest';
import ApiNativeQuerySnippetPostRequest from '../model/ApiNativeQuerySnippetPostRequest';

/**
* ApiNativeQuerySnippet service.
* @module api/ApiNativeQuerySnippetApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiNativeQuerySnippetApi {

    /**
    * Constructs a new ApiNativeQuerySnippetApi. 
    * @alias module:api/ApiNativeQuerySnippetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiNativeQuerySnippetGet operation.
     * @callback module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/native-query-snippet/
     * Fetch all snippets
     * @param {Object} opts Optional parameters
     * @param {Boolean} [archived = false)] 
     * @param {module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiNativeQuerySnippetGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'archived': opts['archived']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/native-query-snippet/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiNativeQuerySnippetIdGet operation.
     * @callback module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/native-query-snippet/{id}
     * Fetch native query snippet with ID.
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiNativeQuerySnippetIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiNativeQuerySnippetIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/native-query-snippet/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiNativeQuerySnippetIdPut operation.
     * @callback module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PUT /api/native-query-snippet/{id}
     * Update an existing `NativeQuerySnippet`.
     * @param {Number} id value must be an integer greater than zero.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiNativeQuerySnippetIdPutRequest} [apiNativeQuerySnippetIdPutRequest] 
     * @param {module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiNativeQuerySnippetIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiNativeQuerySnippetIdPutRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiNativeQuerySnippetIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/native-query-snippet/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiNativeQuerySnippetPost operation.
     * @callback module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/native-query-snippet/
     * Create a new `NativeQuerySnippet`.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiNativeQuerySnippetPostRequest} [apiNativeQuerySnippetPostRequest] 
     * @param {module:api/ApiNativeQuerySnippetApi~apiNativeQuerySnippetPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiNativeQuerySnippetPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiNativeQuerySnippetPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/native-query-snippet/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
