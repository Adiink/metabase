/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiSetupPostRequest from '../model/ApiSetupPostRequest';

/**
* ApiSetup service.
* @module api/ApiSetupApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiSetupApi {

    /**
    * Constructs a new ApiSetupApi. 
    * @alias module:api/ApiSetupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiSetupAdminChecklistGet operation.
     * @callback module:api/ApiSetupApi~apiSetupAdminChecklistGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/setup/admin_checklist
     * Return various \"admin checklist\" steps and whether they've been completed. You must be a superuser to see this!
     * @param {module:api/ApiSetupApi~apiSetupAdminChecklistGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiSetupAdminChecklistGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/setup/admin_checklist', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSetupPost operation.
     * @callback module:api/ApiSetupApi~apiSetupPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/setup/
     * Special endpoint for creating the first user during setup. This endpoint both creates the user AND logs them in and   returns a session ID. This endpoint can also be used to add a database, create and invite a second admin, and/or   set specific settings from the setup flow.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiSetupPostRequest} [apiSetupPostRequest] 
     * @param {module:api/ApiSetupApi~apiSetupPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiSetupPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiSetupPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/setup/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSetupUserDefaultsGet operation.
     * @callback module:api/ApiSetupApi~apiSetupUserDefaultsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/setup/user_defaults
     * Returns object containing default user details for initial setup, if configured,    and if the provided token value matches the token in the configuration value.
     * @param {module:api/ApiSetupApi~apiSetupUserDefaultsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiSetupUserDefaultsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/setup/user_defaults', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
