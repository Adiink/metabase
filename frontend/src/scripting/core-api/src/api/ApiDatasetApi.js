/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiDatasetExportFormatPostRequest from '../model/ApiDatasetExportFormatPostRequest';
import ApiDatasetNativePostRequest from '../model/ApiDatasetNativePostRequest';
import ApiDatasetParameterSearchQueryPostRequest from '../model/ApiDatasetParameterSearchQueryPostRequest';
import ApiDatasetPivotPostRequest from '../model/ApiDatasetPivotPostRequest';
import ApiDatasetPostRequest from '../model/ApiDatasetPostRequest';
import ApiDatasetQueryMetadataPostRequest from '../model/ApiDatasetQueryMetadataPostRequest';

/**
* ApiDataset service.
* @module api/ApiDatasetApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiDatasetApi {

    /**
    * Constructs a new ApiDatasetApi. 
    * @alias module:api/ApiDatasetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiDatasetExportFormatPost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetExportFormatPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/{export-format}
     * Execute a query and download the result data as a file in the specified format.
     * @param {module:model/String} exportFormat 
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetExportFormatPostRequest} [apiDatasetExportFormatPostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetExportFormatPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetExportFormatPost(exportFormat, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetExportFormatPostRequest'];
      // verify the required parameter 'exportFormat' is set
      if (exportFormat === undefined || exportFormat === null) {
        throw new Error("Missing the required parameter 'exportFormat' when calling apiDatasetExportFormatPost");
      }

      let pathParams = {
        'export-format': exportFormat
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/{export-format}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiDatasetNativePost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetNativePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/native
     * Fetch a native version of an MBQL query.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetNativePostRequest} [apiDatasetNativePostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetNativePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetNativePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetNativePostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/native', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiDatasetParameterSearchQueryPost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetParameterSearchQueryPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/parameter/search/{query}
     * Return parameter values for cards or dashboards that are being edited. Expects a query string at `?query=foo`.
     * @param {String} query value must be a non-blank string.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetParameterSearchQueryPostRequest} [apiDatasetParameterSearchQueryPostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetParameterSearchQueryPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetParameterSearchQueryPost(query, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetParameterSearchQueryPostRequest'];
      // verify the required parameter 'query' is set
      if (query === undefined || query === null) {
        throw new Error("Missing the required parameter 'query' when calling apiDatasetParameterSearchQueryPost");
      }

      let pathParams = {
        'query': query
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/parameter/search/{query}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiDatasetParameterValuesPost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetParameterValuesPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/parameter/values
     * Return parameter values for cards or dashboards that are being edited.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetParameterSearchQueryPostRequest} [apiDatasetParameterSearchQueryPostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetParameterValuesPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetParameterValuesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetParameterSearchQueryPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/parameter/values', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiDatasetPivotPost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetPivotPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/pivot
     * Generate a pivoted dataset for an ad-hoc query
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetPivotPostRequest} [apiDatasetPivotPostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetPivotPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetPivotPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetPivotPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/pivot', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiDatasetPost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/
     * Execute a query and retrieve the results in the usual format. The query will not use the cache.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetPostRequest} [apiDatasetPostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiDatasetQueryMetadataPost operation.
     * @callback module:api/ApiDatasetApi~apiDatasetQueryMetadataPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/dataset/query_metadata
     * Get all of the required query metadata for an ad-hoc query.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiDatasetQueryMetadataPostRequest} [apiDatasetQueryMetadataPostRequest] 
     * @param {module:api/ApiDatasetApi~apiDatasetQueryMetadataPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiDatasetQueryMetadataPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDatasetQueryMetadataPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataset/query_metadata', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
