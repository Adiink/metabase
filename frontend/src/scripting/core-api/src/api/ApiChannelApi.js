/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiChannelGetRequest from '../model/ApiChannelGetRequest';
import ApiChannelIdPutRequest from '../model/ApiChannelIdPutRequest';
import ApiChannelPostRequest from '../model/ApiChannelPostRequest';
import ApiChannelTestPostRequest from '../model/ApiChannelTestPostRequest';

/**
* ApiChannel service.
* @module api/ApiChannelApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiChannelApi {

    /**
    * Constructs a new ApiChannelApi. 
    * @alias module:api/ApiChannelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiChannelGet operation.
     * @callback module:api/ApiChannelApi~apiChannelGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/channel/
     * Get all channels
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiChannelGetRequest} [apiChannelGetRequest] 
     * @param {module:api/ApiChannelApi~apiChannelGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiChannelGet(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiChannelGetRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/channel/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiChannelIdGet operation.
     * @callback module:api/ApiChannelApi~apiChannelIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/channel/{id}
     * Get a channel
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:api/ApiChannelApi~apiChannelIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiChannelIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiChannelIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/channel/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiChannelIdPut operation.
     * @callback module:api/ApiChannelApi~apiChannelIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PUT /api/channel/{id}
     * Update a channel
     * @param {Number} id value must be an integer greater than zero.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiChannelIdPutRequest} [apiChannelIdPutRequest] 
     * @param {module:api/ApiChannelApi~apiChannelIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiChannelIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiChannelIdPutRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiChannelIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/channel/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiChannelPost operation.
     * @callback module:api/ApiChannelApi~apiChannelPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/channel/
     * Create a channel
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiChannelPostRequest} [apiChannelPostRequest] 
     * @param {module:api/ApiChannelApi~apiChannelPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiChannelPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiChannelPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/channel/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiChannelTestPost operation.
     * @callback module:api/ApiChannelApi~apiChannelTestPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/channel/test
     * Test a channel connection
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiChannelTestPostRequest} [apiChannelTestPostRequest] 
     * @param {module:api/ApiChannelApi~apiChannelTestPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiChannelTestPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiChannelTestPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/channel/test', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
