/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiPulseUnsubscribePostRequest from '../model/ApiPulseUnsubscribePostRequest';
import ApiPulseUnsubscribeUndoPostRequest from '../model/ApiPulseUnsubscribeUndoPostRequest';

/**
* ApiPulseUnsubscribe service.
* @module api/ApiPulseUnsubscribeApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiPulseUnsubscribeApi {

    /**
    * Constructs a new ApiPulseUnsubscribeApi. 
    * @alias module:api/ApiPulseUnsubscribeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPulseUnsubscribePost operation.
     * @callback module:api/ApiPulseUnsubscribeApi~apiPulseUnsubscribePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/pulse/unsubscribe/
     * Allow non-users to unsubscribe from pulses/subscriptions, with the hash given through email.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiPulseUnsubscribePostRequest} [apiPulseUnsubscribePostRequest] 
     * @param {module:api/ApiPulseUnsubscribeApi~apiPulseUnsubscribePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPulseUnsubscribePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiPulseUnsubscribePostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/pulse/unsubscribe/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPulseUnsubscribeUndoPost operation.
     * @callback module:api/ApiPulseUnsubscribeApi~apiPulseUnsubscribeUndoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/pulse/unsubscribe/undo
     * Allow non-users to undo an unsubscribe from pulses/subscriptions, with the hash given through email.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiPulseUnsubscribeUndoPostRequest} [apiPulseUnsubscribeUndoPostRequest] 
     * @param {module:api/ApiPulseUnsubscribeApi~apiPulseUnsubscribeUndoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPulseUnsubscribeUndoPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiPulseUnsubscribeUndoPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/pulse/unsubscribe/undo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
