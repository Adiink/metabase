/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiUserIdPasswordPutRequest from '../model/ApiUserIdPasswordPutRequest';
import ApiUtilEntityIdPostRequest from '../model/ApiUtilEntityIdPostRequest';
import ApiUtilProductFeedbackPostRequest from '../model/ApiUtilProductFeedbackPostRequest';

/**
* ApiUtil service.
* @module api/ApiUtilApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiUtilApi {

    /**
    * Constructs a new ApiUtilApi. 
    * @alias module:api/ApiUtilApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiUtilBugReportDetailsGet operation.
     * @callback module:api/ApiUtilApi~apiUtilBugReportDetailsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/util/bug_report_details
     * Returns version and system information relevant to filing a bug report against Metabase.
     * @param {module:api/ApiUtilApi~apiUtilBugReportDetailsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilBugReportDetailsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/bug_report_details', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilDiagnosticInfoConnectionPoolInfoGet operation.
     * @callback module:api/ApiUtilApi~apiUtilDiagnosticInfoConnectionPoolInfoGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/util/diagnostic_info/connection_pool_info
     * Returns database connection pool info for the current Metabase instance.
     * @param {module:api/ApiUtilApi~apiUtilDiagnosticInfoConnectionPoolInfoGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilDiagnosticInfoConnectionPoolInfoGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/diagnostic_info/connection_pool_info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilEntityIdPost operation.
     * @callback module:api/ApiUtilApi~apiUtilEntityIdPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/util/entity_id
     * Translate entity IDs to model IDs.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiUtilEntityIdPostRequest} [apiUtilEntityIdPostRequest] 
     * @param {module:api/ApiUtilApi~apiUtilEntityIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilEntityIdPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiUtilEntityIdPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/entity_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilLogsGet operation.
     * @callback module:api/ApiUtilApi~apiUtilLogsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/util/logs
     * Logs.
     * @param {module:api/ApiUtilApi~apiUtilLogsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilLogsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/logs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilPasswordCheckPost operation.
     * @callback module:api/ApiUtilApi~apiUtilPasswordCheckPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/util/password_check
     * Endpoint that checks if the supplied password meets the currently configured password complexity rules.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiUserIdPasswordPutRequest} [apiUserIdPasswordPutRequest] 
     * @param {module:api/ApiUtilApi~apiUtilPasswordCheckPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilPasswordCheckPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiUserIdPasswordPutRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/password_check', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilProductFeedbackPost operation.
     * @callback module:api/ApiUtilApi~apiUtilProductFeedbackPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/util/product-feedback
     * Endpoint to provide feedback from the product
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiUtilProductFeedbackPostRequest} [apiUtilProductFeedbackPostRequest] 
     * @param {module:api/ApiUtilApi~apiUtilProductFeedbackPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilProductFeedbackPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiUtilProductFeedbackPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/product-feedback', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilRandomTokenGet operation.
     * @callback module:api/ApiUtilApi~apiUtilRandomTokenGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/util/random_token
     * Return a cryptographically secure random 32-byte token, encoded as a hexadecimal string.    Intended for use when creating a value for `embedding-secret-key`.
     * @param {module:api/ApiUtilApi~apiUtilRandomTokenGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilRandomTokenGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/random_token', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiUtilStatsGet operation.
     * @callback module:api/ApiUtilApi~apiUtilStatsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/util/stats
     * Anonymous usage stats. Endpoint for testing, and eventually exposing this to instance admins to let them see   what is being phoned home.
     * @param {module:api/ApiUtilApi~apiUtilStatsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiUtilStatsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/util/stats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
