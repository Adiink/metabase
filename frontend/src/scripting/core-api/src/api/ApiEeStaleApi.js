/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ApiEeStale service.
* @module api/ApiEeStaleApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiEeStaleApi {

    /**
    * Constructs a new ApiEeStaleApi. 
    * @alias module:api/ApiEeStaleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiEeStaleIdGet operation.
     * @callback module:api/ApiEeStaleApi~apiEeStaleIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/ee/stale/{id}
     * A flexible endpoint that returns stale entities, in the same shape as collections/items, with the following options:   - `before_date` - only return entities that were last edited before this date (default: 6 months ago)   - `is_recursive` - if true, return entities from all children of the collection, not just the direct children (default: false)   - `sort_column` - the column to sort by (default: name)   - `sort_direction` - the direction to sort by (default: asc)
     * @param {Number} id 
     * @param {Boolean} isRecursive 
     * @param {module:model/String} sortColumn 
     * @param {module:model/String} sortDirection 
     * @param {Object} opts Optional parameters
     * @param {String} [beforeDate] 
     * @param {module:api/ApiEeStaleApi~apiEeStaleIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEeStaleIdGet(id, isRecursive, sortColumn, sortDirection, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiEeStaleIdGet");
      }
      // verify the required parameter 'isRecursive' is set
      if (isRecursive === undefined || isRecursive === null) {
        throw new Error("Missing the required parameter 'isRecursive' when calling apiEeStaleIdGet");
      }
      // verify the required parameter 'sortColumn' is set
      if (sortColumn === undefined || sortColumn === null) {
        throw new Error("Missing the required parameter 'sortColumn' when calling apiEeStaleIdGet");
      }
      // verify the required parameter 'sortDirection' is set
      if (sortDirection === undefined || sortDirection === null) {
        throw new Error("Missing the required parameter 'sortDirection' when calling apiEeStaleIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'before_date': opts['beforeDate'],
        'is_recursive': isRecursive,
        'sort_column': sortColumn,
        'sort_direction': sortDirection
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/ee/stale/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
