/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiRevisionRevertPostRequest from '../model/ApiRevisionRevertPostRequest';

/**
* ApiRevision service.
* @module api/ApiRevisionApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiRevisionApi {

    /**
    * Constructs a new ApiRevisionApi. 
    * @alias module:api/ApiRevisionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiRevisionEntityIdGet operation.
     * @callback module:api/ApiRevisionApi~apiRevisionEntityIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/revision/{entity}/{id}
     * Fetch `Revisions` for an object with ID.
     * @param {module:model/String} entity 
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:api/ApiRevisionApi~apiRevisionEntityIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiRevisionEntityIdGet(entity, id, callback) {
      let postBody = null;
      // verify the required parameter 'entity' is set
      if (entity === undefined || entity === null) {
        throw new Error("Missing the required parameter 'entity' when calling apiRevisionEntityIdGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiRevisionEntityIdGet");
      }

      let pathParams = {
        'entity': entity,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/revision/{entity}/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiRevisionGet operation.
     * @callback module:api/ApiRevisionApi~apiRevisionGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/revision/
     * Get revisions of an object.
     * @param {Number} id value must be an integer greater than zero.
     * @param {module:model/String} entity 
     * @param {module:api/ApiRevisionApi~apiRevisionGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiRevisionGet(id, entity, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiRevisionGet");
      }
      // verify the required parameter 'entity' is set
      if (entity === undefined || entity === null) {
        throw new Error("Missing the required parameter 'entity' when calling apiRevisionGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id,
        'entity': entity
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/revision/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiRevisionRevertPost operation.
     * @callback module:api/ApiRevisionApi~apiRevisionRevertPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST /api/revision/revert
     * Revert an object to a prior revision.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiRevisionRevertPostRequest} [apiRevisionRevertPostRequest] 
     * @param {module:api/ApiRevisionApi~apiRevisionRevertPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiRevisionRevertPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['apiRevisionRevertPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/revision/revert', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
