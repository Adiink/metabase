/**
 * Metabase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.53.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiMtUserIdAttributesPutRequest from '../model/ApiMtUserIdAttributesPutRequest';

/**
* ApiMtUser service.
* @module api/ApiMtUserApi
* @version v1.53.2-SNAPSHOT
*/
export default class ApiMtUserApi {

    /**
    * Constructs a new ApiMtUserApi. 
    * @alias module:api/ApiMtUserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiMtUserAttributesGet operation.
     * @callback module:api/ApiMtUserApi~apiMtUserAttributesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET /api/mt/user/attributes
     * Fetch a list of possible keys for User `login_attributes`. This just looks at keys that have already been set for   existing Users and returns those. 
     * @param {module:api/ApiMtUserApi~apiMtUserAttributesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiMtUserAttributesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/mt/user/attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiMtUserIdAttributesPut operation.
     * @callback module:api/ApiMtUserApi~apiMtUserIdAttributesPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PUT /api/mt/user/{id}/attributes
     * Update the `login_attributes` for a User.
     * @param {Number} id value must be an integer greater than zero.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiMtUserIdAttributesPutRequest} [apiMtUserIdAttributesPutRequest] 
     * @param {module:api/ApiMtUserApi~apiMtUserIdAttributesPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiMtUserIdAttributesPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiMtUserIdAttributesPutRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiMtUserIdAttributesPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/mt/user/{id}/attributes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
